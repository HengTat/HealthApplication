{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\UNVERSITY SUBJECTS\\\\POST GRAD\\\\SYSTEM ANALYSIS\\\\HealthApplication\\\\healthapp\\\\src\\\\components\\\\Homepagecomponents\\\\Maingraph.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport Highcharts, { destroyObjectProperties } from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { useEffect } from \"react\";\nconst options = {\n  colors: [\"#058DC7\", \"#50B432\"],\n  chart: {\n    backgroundColor: Highcharts.defaultOptions.legend.backgroundColor || // theme\n    \"#3E4551\",\n    color: \"#FFFFFF\"\n  },\n  title: {\n    text: \"Body Weight and Fat Percentage\",\n    style: {\n      color: \"#FFFFFF\"\n    }\n  },\n  subtitle: {\n    text: \"\"\n  },\n  xAxis: [{\n    categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    crosshair: true,\n    labels: {\n      style: {\n        color: \"#FFFFFF\"\n      }\n    }\n  }],\n  yAxis: [{\n    // Primary yAxis\n    labels: {\n      format: \"{value}Kg\",\n      style: {\n        color: \"#50C878\"\n      }\n    },\n    title: {\n      text: \"Body Weight\",\n      style: {\n        color: \"#50C878\"\n      }\n    }\n  }, {\n    // Secondary yAxis\n    title: {\n      text: \"Body Fat Percentage\",\n      style: {\n        color: Highcharts.getOptions().colors[0]\n      }\n    },\n    labels: {\n      format: \"{value} %\",\n      style: {\n        color: Highcharts.getOptions().colors[0]\n      }\n    },\n    opposite: true\n  }],\n  tooltip: {\n    shared: true\n  },\n  legend: {\n    layout: \"vertical\",\n    align: \"left\",\n    x: 120,\n    verticalAlign: \"top\",\n    y: 100,\n    floating: true,\n    backgroundColor: Highcharts.defaultOptions.legend.backgroundColor || // theme\n    \"rgba(255,255,255,0.25)\"\n  },\n  series: [{\n    name: \"Body Fat\",\n    type: \"column\",\n    yAxis: 1,\n    data: [20.0, 21.5, 21.4, 20.8, 19.0, 18.5, 18.0, 17.5, 16.4, 15.1, 14.6, 13.4],\n    tooltip: {\n      valueSuffix: \" %\"\n    }\n  }, {\n    name: \"Body Weight\",\n    type: \"spline\",\n    data: [77.0, 76.9, 79.5, 75.5, 74.2, 74.5, 73.2, 73.5, 72.3, 71.3, 70.9, 69.6],\n    tooltip: {\n      valueSuffix: \"Kg\"\n    }\n  }]\n};\n\nfunction Maingraph(props) {\n  _s();\n\n  async function getgraphdata() {\n    await axios.get(\"http://localhost:3000/updates/gethealthdetailscurrentyear/\" + props.curremail).then(data => {\n      var listofbodyfat = [];\n      var listofweight = [];\n\n      for (var x of data.data) {\n        listofbodyfat.push(x[\"bodyfat\"]);\n        listofweight.push(x[\"weight\"]);\n      }\n\n      options.series[0].data = listofbodyfat;\n      options.series[1].data = listofweight;\n    });\n  }\n\n  useEffect(() => {\n    getgraphdata();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Maingraph, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Maingraph;\nexport default Maingraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Maingraph\");","map":{"version":3,"sources":["C:/Users/User/Documents/UNVERSITY SUBJECTS/POST GRAD/SYSTEM ANALYSIS/HealthApplication/healthapp/src/components/Homepagecomponents/Maingraph.js"],"names":["axios","Highcharts","destroyObjectProperties","HighchartsReact","useEffect","options","colors","chart","backgroundColor","defaultOptions","legend","color","title","text","style","subtitle","xAxis","categories","crosshair","labels","yAxis","format","getOptions","opposite","tooltip","shared","layout","align","x","verticalAlign","y","floating","series","name","type","data","valueSuffix","Maingraph","props","getgraphdata","get","curremail","then","listofbodyfat","listofweight","push"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport Highcharts, { destroyObjectProperties } from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst options = {\r\n  colors: [\"#058DC7\", \"#50B432\"],\r\n  chart: {\r\n    backgroundColor:\r\n      Highcharts.defaultOptions.legend.backgroundColor || // theme\r\n      \"#3E4551\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  title: {\r\n    text: \"Body Weight and Fat Percentage\",\r\n    style: {\r\n      color: \"#FFFFFF\",\r\n    },\r\n  },\r\n  subtitle: {\r\n    text: \"\",\r\n  },\r\n  xAxis: [\r\n    {\r\n      categories: [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\",\r\n      ],\r\n      crosshair: true,\r\n      labels: {\r\n        style: {\r\n          color: \"#FFFFFF\",\r\n        },\r\n      },\r\n    },\r\n  ],\r\n  yAxis: [\r\n    {\r\n      // Primary yAxis\r\n      labels: {\r\n        format: \"{value}Kg\",\r\n        style: {\r\n          color: \"#50C878\",\r\n        },\r\n      },\r\n      title: {\r\n        text: \"Body Weight\",\r\n        style: {\r\n          color: \"#50C878\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      // Secondary yAxis\r\n      title: {\r\n        text: \"Body Fat Percentage\",\r\n        style: {\r\n          color: Highcharts.getOptions().colors[0],\r\n        },\r\n      },\r\n      labels: {\r\n        format: \"{value} %\",\r\n        style: {\r\n          color: Highcharts.getOptions().colors[0],\r\n        },\r\n      },\r\n      opposite: true,\r\n    },\r\n  ],\r\n  tooltip: {\r\n    shared: true,\r\n  },\r\n  legend: {\r\n    layout: \"vertical\",\r\n    align: \"left\",\r\n    x: 120,\r\n    verticalAlign: \"top\",\r\n    y: 100,\r\n    floating: true,\r\n    backgroundColor:\r\n      Highcharts.defaultOptions.legend.backgroundColor || // theme\r\n      \"rgba(255,255,255,0.25)\",\r\n      \r\n  },\r\n  series: [\r\n    {\r\n      name: \"Body Fat\",\r\n      type: \"column\",\r\n      yAxis: 1,\r\n      data: [\r\n        20.0,\r\n        21.5,\r\n        21.4,\r\n        20.8,\r\n        19.0,\r\n        18.5,\r\n        18.0,\r\n        17.5,\r\n        16.4,\r\n        15.1,\r\n        14.6,\r\n        13.4,\r\n      ],\r\n      tooltip: {\r\n        valueSuffix: \" %\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Body Weight\",\r\n      type: \"spline\",\r\n      data: [\r\n        77.0,\r\n        76.9,\r\n        79.5,\r\n        75.5,\r\n        74.2,\r\n        74.5,\r\n        73.2,\r\n        73.5,\r\n        72.3,\r\n        71.3,\r\n        70.9,\r\n        69.6,\r\n      ],\r\n      tooltip: {\r\n        valueSuffix: \"Kg\",\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nfunction Maingraph(props){\r\n\r\n  async function getgraphdata(){\r\n    await axios.get(\r\n      \"http://localhost:3000/updates/gethealthdetailscurrentyear/\"+props.curremail\r\n    ).then(data=>{\r\n      var listofbodyfat=[]\r\n      var listofweight=[]\r\n      for (var x of data.data){\r\n        listofbodyfat.push(x[\"bodyfat\"]);\r\n        listofweight.push(x[\"weight\"]);\r\n      }\r\n          options.series[0].data=listofbodyfat;\r\n          options.series[1].data=listofweight;\r\n    });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getgraphdata();\r\n  },[]);\r\n\r\n    return (\r\n      <div>\r\n        <HighchartsReact\r\n          highcharts={Highcharts}\r\n          options={options}\r\n        />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Maingraph;"]},"metadata":{},"sourceType":"module"}