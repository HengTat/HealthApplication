{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\UNVERSITY SUBJECTS\\\\POST GRAD\\\\SYSTEM ANALYSIS\\\\HealthApplication\\\\healthapp\\\\src\\\\components\\\\Updates.js\",\n    _s = $RefreshSig$();\n\nimport react, { useEffect, useState } from 'react';\nimport { MDBCard, MDBDataTable } from 'mdbreact';\nimport PostHealthUdpates from './HealthUpdates/posthealthupdates';\nimport axios from 'axios';\nimport { useSerialIds } from 'highcharts';\n\nfunction Updates(props) {\n  _s();\n\n  const [isLoading, setisLoading] = useState(true);\n  const [updatedata, setupdatedata] = useState([]);\n  const data = {\n    columns: [{\n      label: \"\",\n      field: \"number\",\n      sort: \"asc\",\n      width: 150\n    }, {\n      label: \"Height\",\n      field: \"height\",\n      sort: \"asc\",\n      width: 270\n    }, {\n      label: \"Weight\",\n      field: \"weight\",\n      sort: \"asc\",\n      width: 270\n    }, {\n      label: \"BMI\",\n      field: \"BMI\",\n      sort: \"asc\",\n      width: 270\n    }, {\n      label: \"Status\",\n      field: \"Status\",\n      sort: \"asc\",\n      width: 270\n    }],\n    rows: test\n  };\n  useEffect(() => {\n    axios.get(\"http://localhost:3000/updates/getcurrenthealthstatus/\" + props.curremail).then(data => {\n      var i = 1;\n\n      for (var x of data) {\n        x['number'] = i;\n        i++;\n        x[\"BMI\"] = \"test\";\n        x[\"status\"] = \"test\";\n      }\n\n      setupdatedata(data.data);\n      data.rows = updatedata;\n      setisLoading(false);\n    });\n  }, []);\n\n  function print() {\n    console.log(test);\n    console.log(data.rows[0]);\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MDBCard, {\n      style: {\n        paddingTop: \"40px\",\n        AlignItems: \"center\",\n        backgroundColor: \"#4B515D\",\n        color: \"white\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"HealthUpdates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostHealthUdpates, {\n        style: {\n          float: \"right\"\n        },\n        curremail: props.curremail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBCard, {\n      style: {\n        backgroundColor: \"#4B515D\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MDBDataTable, {\n        theadColor: \"darkgrey\",\n        theadTextWhite: true,\n        striped: true,\n        bordered: true,\n        small: true,\n        fixed: true,\n        entriesOptions: [1, 5, 10],\n        entries: 10,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => {\n          print();\n        },\n        children: \"testing \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Updates, \"932ezoVXj67kkwW5o9j0d9WA+QM=\");\n\n_c = Updates;\nexport default Updates;\n\nvar _c;\n\n$RefreshReg$(_c, \"Updates\");","map":{"version":3,"sources":["C:/Users/User/Documents/UNVERSITY SUBJECTS/POST GRAD/SYSTEM ANALYSIS/HealthApplication/healthapp/src/components/Updates.js"],"names":["react","useEffect","useState","MDBCard","MDBDataTable","PostHealthUdpates","axios","useSerialIds","Updates","props","isLoading","setisLoading","updatedata","setupdatedata","data","columns","label","field","sort","width","rows","test","get","curremail","then","i","x","print","console","log","paddingTop","AlignItems","backgroundColor","color","float"],"mappings":"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","sourcesContent":["import react, { useEffect, useState } from 'react'\r\nimport {MDBCard,MDBDataTable} from 'mdbreact'\r\nimport PostHealthUdpates from './HealthUpdates/posthealthupdates';\r\nimport axios from 'axios';\r\nimport { useSerialIds } from 'highcharts';\r\n\r\nfunction Updates(props){\r\n  const [isLoading, setisLoading] = useState(true);\r\n  const [updatedata, setupdatedata] = useState([]);\r\n  \r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"\",\r\n        field: \"number\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Height\",\r\n        field: \"height\",\r\n        sort: \"asc\",\r\n        width: 270,\r\n      },\r\n      {\r\n        label: \"Weight\",\r\n        field: \"weight\",\r\n        sort: \"asc\",\r\n        width: 270,\r\n      },\r\n      {\r\n        label: \"BMI\",\r\n        field: \"BMI\",\r\n        sort: \"asc\",\r\n        width: 270,\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"Status\",\r\n        sort: \"asc\",\r\n        width: 270,\r\n      },\r\n    ],\r\n    rows: test,\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"http://localhost:3000/updates/getcurrenthealthstatus/\" +\r\n          props.curremail\r\n      )\r\n      .then((data) => {\r\n        var i=1;\r\n        for(var x of data){\r\n            x['number']=i;\r\n            i++;\r\n            x[\"BMI\"]=\"test\";\r\n            x[\"status\"]=\"test\";\r\n        }\r\n        setupdatedata(data.data);\r\n        data.rows = updatedata;\r\n        setisLoading(false);\r\n      });\r\n  },[]);\r\n\r\n  function print(){\r\n    console.log(test);\r\n    console.log(data.rows[0]);\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <MDBCard\r\n        style={{\r\n          paddingTop: \"40px\",\r\n          AlignItems: \"center\",\r\n          backgroundColor: \"#4B515D\",\r\n          color: \"white\",\r\n        }}\r\n      >\r\n        <h2>HealthUpdates</h2>\r\n        <PostHealthUdpates style={{float:\"right\"}} curremail={props.curremail}></PostHealthUdpates>\r\n      </MDBCard>\r\n      <MDBCard style={{ backgroundColor: \"#4B515D\" }}>\r\n        <MDBDataTable\r\n          theadColor=\"darkgrey\"\r\n          theadTextWhite\r\n          striped\r\n          bordered\r\n          small\r\n          fixed\r\n          entriesOptions={[1, 5, 10]}\r\n          entries={10}\r\n          data={data}\r\n        />\r\n        <a onClick={()=>{print()}}>testing </a>\r\n      </MDBCard>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Updates;"]},"metadata":{},"sourceType":"module"}