{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\UNVERSITY SUBJECTS\\\\POST GRAD\\\\SYSTEM ANALYSIS\\\\HealthApplication\\\\healthapp\\\\src\\\\components\\\\Goals.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState, useEffect } from 'react';\nimport { MDBCard, MDBDataTable } from 'mdbreact';\nimport SetGoal from './Goals/Setgoal';\nimport axios from 'axios';\nimport config from '../config.json';\n\nfunction Goals(props) {\n  _s();\n\n  const [isLoading, setisLoading] = useState(true);\n  const [updatedata, setupdatedata] = useState([]);\n  const data = {\n    columns: [{\n      label: \"Id\",\n      field: \"number\",\n      sort: \"asc\",\n      width: 150\n    }, {\n      label: \"Weight (kg)\",\n      field: \"weight\",\n      sort: \"asc\",\n      width: 270\n    }, {\n      label: \"BodyFat (%)\",\n      field: \"bodyfat\",\n      sort: \"asc\",\n      width: 270\n    }, {\n      label: \"BMI\",\n      field: \"BMI\",\n      sort: \"asc\",\n      width: 270\n    }],\n    rows: updatedata\n  };\n\n  function getdata() {\n    console.log(config.config.apiserver);\n    axios.get(\"http://localhost:3000/goal/getgoals/\" + props.curremail).then(data => {\n      var i = 1;\n\n      for (var x of data.data) {\n        x[\"number\"] = i;\n        i++;\n      }\n\n      setupdatedata(data.data);\n      data.rows = updatedata;\n      setisLoading(false);\n    });\n  }\n\n  useEffect(() => {\n    getdata();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MDBCard, {\n      style: {\n        paddingTop: \"40px\",\n        AlignItems: \"center\",\n        backgroundColor: \"#4B515D\",\n        color: \"white\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Goals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(SetGoal, {\n        style: {\n          float: \"right\"\n        },\n        curremail: props.curremail,\n        setisLoading: setisLoading,\n        getdata: getdata\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(MDBCard, {\n      style: {\n        backgroundColor: \"#4B515D\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MDBDataTable, {\n        dark: true,\n        theadColor: \"darkgrey\",\n        theadTextWhite: true,\n        striped: true,\n        bordered: true,\n        small: true,\n        fixed: true,\n        hover: true,\n        tbodyTextWhite: true,\n        entries: 8,\n        entriesOptions: [1, 5, 8],\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 8\n  }, this);\n}\n\n_s(Goals, \"932ezoVXj67kkwW5o9j0d9WA+QM=\");\n\n_c = Goals;\nexport default Goals;\n\nvar _c;\n\n$RefreshReg$(_c, \"Goals\");","map":{"version":3,"sources":["C:/Users/User/Documents/UNVERSITY SUBJECTS/POST GRAD/SYSTEM ANALYSIS/HealthApplication/healthapp/src/components/Goals.js"],"names":["react","useState","useEffect","MDBCard","MDBDataTable","SetGoal","axios","config","Goals","props","isLoading","setisLoading","updatedata","setupdatedata","data","columns","label","field","sort","width","rows","getdata","console","log","apiserver","get","curremail","then","i","x","paddingTop","AlignItems","backgroundColor","color","float"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,OAAR,EAAgBC,YAAhB,QAAmC,UAAnC;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMa,IAAI,GAAG;AACXC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,KAAK,EAAE,IADT;AAEEC,MAAAA,KAAK,EAAE,QAFT;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,KAAK,EAAE;AAJT,KADO,EAOP;AACEH,MAAAA,KAAK,EAAE,aADT;AAEEC,MAAAA,KAAK,EAAE,QAFT;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,KAAK,EAAE;AAJT,KAPO,EAaR;AACGH,MAAAA,KAAK,EAAE,aADV;AAEGC,MAAAA,KAAK,EAAE,SAFV;AAGGC,MAAAA,IAAI,EAAE,KAHT;AAIGC,MAAAA,KAAK,EAAE;AAJV,KAbQ,EAmBP;AACEH,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,KAAK,EAAE,KAFT;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,KAAK,EAAE;AAJT,KAnBO,CADE;AA2BXC,IAAAA,IAAI,EAAER;AA3BK,GAAb;;AA8BA,WAASS,OAAT,GAAmB;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAM,CAACA,MAAP,CAAciB,SAA1B;AACAlB,IAAAA,KAAK,CACFmB,GADH,CAEI,yCACEhB,KAAK,CAACiB,SAHZ,EAKGC,IALH,CAKSb,IAAD,IAAU;AACd,UAAIc,CAAC,GAAG,CAAR;;AACA,WAAK,IAAIC,CAAT,IAAcf,IAAI,CAACA,IAAnB,EAAyB;AACvBe,QAAAA,CAAC,CAAC,QAAD,CAAD,GAAcD,CAAd;AACAA,QAAAA,CAAC;AACF;;AACDf,MAAAA,aAAa,CAACC,IAAI,CAACA,IAAN,CAAb;AACAA,MAAAA,IAAI,CAACM,IAAL,GAAYR,UAAZ;AACAD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAdH;AAeD;;AAEDT,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIX,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,OAAD;AACE,MAAA,KAAK,EAAE;AACLoB,QAAAA,UAAU,EAAE,MADP;AAELC,QAAAA,UAAU,EAAE,QAFP;AAGLC,QAAAA,eAAe,EAAE,SAHZ;AAILC,QAAAA,KAAK,EAAE;AAJF,OADT;AAAA,8BAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,OAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SADT;AAEE,QAAA,SAAS,EAAEzB,KAAK,CAACiB,SAFnB;AAGE,QAAA,YAAY,EAAEf,YAHhB;AAIE,QAAA,OAAO,EAAEU;AAJX;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEW,QAAAA,eAAe,EAAE;AAAnB,OAAhB;AAAA,6BACE,QAAC,YAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,UAAU,EAAC,UAFb;AAGE,QAAA,cAAc,MAHhB;AAIE,QAAA,OAAO,MAJT;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,KAAK,MANP;AAOE,QAAA,KAAK,MAPP;AAQE,QAAA,KAAK,MARP;AASE,QAAA,cAAc,MAThB;AAUE,QAAA,OAAO,EAAE,CAVX;AAWE,QAAA,cAAc,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAXlB;AAYE,QAAA,IAAI,EAAElB;AAZR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCJ;;GAjGQN,K;;KAAAA,K;AAmGT,eAAeA,KAAf","sourcesContent":["import react,{useState,useEffect} from 'react'\r\nimport {MDBCard,MDBDataTable} from 'mdbreact';\r\nimport SetGoal from './Goals/Setgoal';\r\nimport axios from 'axios';\r\nimport config from '../config.json'\r\n\r\nfunction Goals(props){\r\n     const [isLoading, setisLoading] = useState(true);\r\n     const [updatedata, setupdatedata] = useState([]);\r\n\r\n     const data = {\r\n       columns: [\r\n         {\r\n           label: \"Id\",\r\n           field: \"number\",\r\n           sort: \"asc\",\r\n           width: 150,\r\n         },\r\n         {\r\n           label: \"Weight (kg)\",\r\n           field: \"weight\",\r\n           sort: \"asc\",\r\n           width: 270,\r\n         },\r\n        {\r\n           label: \"BodyFat (%)\",\r\n           field: \"bodyfat\",\r\n           sort: \"asc\",\r\n           width: 270,\r\n         },\r\n         {\r\n           label: \"BMI\",\r\n           field: \"BMI\",\r\n           sort: \"asc\",\r\n           width: 270,\r\n         },\r\n       ],\r\n       rows: updatedata,\r\n     };\r\n\r\n     function getdata() {\r\n       console.log(config.config.apiserver);\r\n       axios\r\n         .get(\r\n           \"http://localhost:3000/goal/getgoals/\" +\r\n             props.curremail\r\n         )\r\n         .then((data) => {\r\n           var i = 1;\r\n           for (var x of data.data) {\r\n             x[\"number\"] = i;\r\n             i++;\r\n           }\r\n           setupdatedata(data.data);\r\n           data.rows = updatedata;\r\n           setisLoading(false);\r\n         });\r\n     }\r\n\r\n     useEffect(() => {\r\n       getdata();\r\n     }, []);\r\n\r\n     if (isLoading) {\r\n       return <div>Loading...</div>;\r\n     }\r\n\r\n     return (\r\n       <div>\r\n         <MDBCard\r\n           style={{\r\n             paddingTop: \"40px\",\r\n             AlignItems: \"center\",\r\n             backgroundColor: \"#4B515D\",\r\n             color: \"white\",\r\n           }}\r\n         >\r\n           <h2>Goals</h2>\r\n           <SetGoal\r\n             style={{ float: \"right\" }}\r\n             curremail={props.curremail}\r\n             setisLoading={setisLoading}\r\n             getdata={getdata}\r\n           ></SetGoal>\r\n         </MDBCard>\r\n         <MDBCard style={{ backgroundColor: \"#4B515D\" }}>\r\n           <MDBDataTable\r\n             dark\r\n             theadColor=\"darkgrey\"\r\n             theadTextWhite\r\n             striped\r\n             bordered\r\n             small\r\n             fixed\r\n             hover\r\n             tbodyTextWhite\r\n             entries={8}\r\n             entriesOptions={[1, 5, 8]}\r\n             data={data}\r\n           />\r\n         </MDBCard>\r\n       </div>\r\n     );\r\n}\r\n\r\nexport default Goals;"]},"metadata":{},"sourceType":"module"}