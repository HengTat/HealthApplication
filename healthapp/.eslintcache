[{"C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\index.js":"1","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\App.js":"3","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\login.js":"4","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\Homepage.js":"5","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\Signup.js":"6","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\EditAccount.js":"7","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\pagecomponent\\footer.js":"8","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\pagecomponent\\nav.js":"9","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\config.js":"10","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\Homepagecomponents\\Maingraph.js":"11","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\Homepagecomponents\\goalcard.js":"12","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\Homepagecomponents\\Currenthealthcard.js":"13","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\HealthUpdates\\posthealthupdates.js":"14","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\Updates.js":"15","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\Goals.js":"16","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\Goals\\Setgoal.js":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":1632,"mtime":1611557172410,"results":"21","hashOfConfig":"19"},{"size":4156,"mtime":1611555740455,"results":"22","hashOfConfig":"19"},{"size":1923,"mtime":1611557172410,"results":"23","hashOfConfig":"19"},{"size":4247,"mtime":1611555665210,"results":"24","hashOfConfig":"19"},{"size":3605,"mtime":1611560445031,"results":"25","hashOfConfig":"19"},{"size":1595,"mtime":1611555718654,"results":"26","hashOfConfig":"19"},{"size":3602,"mtime":1611555607517,"results":"27","hashOfConfig":"19"},{"size":84,"mtime":1611235615987,"results":"28","hashOfConfig":"19"},{"size":2657,"mtime":1611555771286,"results":"29","hashOfConfig":"19"},{"size":1365,"mtime":1611557217796,"results":"30","hashOfConfig":"19"},{"size":1561,"mtime":1611555850384,"results":"31","hashOfConfig":"19"},{"size":3696,"mtime":1611555850384,"results":"32","hashOfConfig":"19"},{"size":2433,"mtime":1611555423673,"results":"33","hashOfConfig":"19"},{"size":2492,"mtime":1611557843687,"results":"34","hashOfConfig":"19"},{"size":2497,"mtime":1611558011956,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1o4lee7",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"38"},"C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\index.js",[],["79","80"],"C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\App.js",[],"C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\login.js",["81"],"import{MDBBtn,MDBCard,MDBCardBody,MDBCardTitle,MDBCol,MDBCardText,MDBIcon} from 'mdbreact';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Login(props){\r\n    const[email,setemail]= useState(\"\");\r\n    const[password,setpassword]=useState(\"\");\r\n    const [invalidmsg, setmsg] = useState(\"\");\r\n\r\n\r\n    useEffect(()=>{\r\n        window.addEventListener(\"email\",emailFunction);\r\n        window.addEventListener(\"password\", passwordFunction);\r\n        window.addEventListener(\"submit\",submit);\r\n\r\n        return () => window.removeEventListener(\"email\", emailFunction);\r\n    })\r\n\r\n    function emailFunction(event){\r\n        setemail(event.target.value);\r\n    }\r\n\r\n    function passwordFunction(event){\r\n        setpassword(event.target.value);\r\n    }\r\n    function submit(){\r\n        if(email===\"\"||password===\"\"){\r\n            setmsg(\"Email and Password required\");\r\n        }\r\n        else{\r\n        axios.get(\"http://localhost:3000\" + \"/login/signin/\"+email+\"/\"+password)\r\n            .then((response) => {\r\n            if (response.status === 200) {\r\n              setmsg(\"\");\r\n              props.setcurremail(email);\r\n              props.props.history.push(\"/homepage\");  \r\n            }\r\n            })\r\n            .catch((error) => {\r\n              console.log(props);\r\n            console.log(error);\r\n            if(error.response!=null) setmsg(error.response.data.msg);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n      <div\r\n        style={{ height: \"80vh\", verticalAlign: \"middle\" }}\r\n        class=\"col text-center align-self-center\"\r\n      >\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br /> \r\n        <br />\r\n        <MDBCol className=\"row justify-content-center align-self-center\">\r\n          <MDBCard\r\n            color=\"stylish-color\"\r\n            style={{ width: \"31rem\", color: \"white\" }}\r\n            class=\"col-xs-1\"\r\n          >\r\n            <MDBCardBody>\r\n              <MDBCardTitle>\r\n                <MDBIcon icon=\"sign-in-alt\" /> &nbsp; Log In\r\n              </MDBCardTitle>\r\n              <MDBCardText\r\n                style={{\r\n                  color: \"white\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                <div className=\"form-group\">\r\n                  <p style={{ color: \"red\" }}>{invalidmsg}</p>\r\n                  <div\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      alignContent: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <label>\r\n                      <MDBIcon icon=\"user\" /> &nbsp; Email\r\n                    </label>\r\n                    <br />\r\n\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"Email\"\r\n                      className=\"form-control form-control-md\"\r\n                      email\r\n                      required\r\n                      style={{ width: \"450px\", textAlign: \"center\" }}\r\n                      onChange={emailFunction}\r\n                    />\r\n                  </div>\r\n                  <br />\r\n                  <label>\r\n                    <MDBIcon icon=\"key\" /> &nbsp; Password\r\n                  </label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"Password\"\r\n                    className=\"form-control form-control-md\"\r\n                    style={{ width: \"450px\", textAlign: \"center\" }}\r\n                    onChange={passwordFunction}\r\n                    required\r\n                  />\r\n                </div>\r\n              </MDBCardText>\r\n              <MDBBtn\r\n                color=\"success\"\r\n                href=\"#\"\r\n                style={{ width: \"350px\" }}\r\n                onClick={submit}\r\n              >\r\n                Login\r\n              </MDBBtn>\r\n              <br></br>\r\n              <a href=\"/signup\">Sign Up</a>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\Homepage.js",[],"C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\Signup.js",["82","83"],"import {\r\n  MDBBtn,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBCardTitle,\r\n  MDBCol,\r\n  MDBCardText,\r\n  MDBIcon,\r\n} from \"mdbreact\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nfunction Signup (props){\r\n\r\n    const[email,setemail]=useState(\"\");\r\n    const[password,setpassword]=useState(\"\");\r\n    const[invalidmsg,setmsg]=useState();\r\n    \r\n    useEffect(()=>{\r\n        window.addEventListener(\"email\",emaillistener);\r\n        window.addEventListener(\"password\",passwordlistener);\r\n        window.addEventListener(\"submit\",submitlistener)\r\n        return()=>window.removeEventListener(\"email\",emaillistener);\r\n    });\r\n\r\n    function emaillistener(event){\r\n        setemail(event.target.value);\r\n    }\r\n\r\n    function passwordlistener(event){\r\n        setpassword(event.target.value);\r\n    }\r\n\r\n    function submitlistener(){\r\n        var payload = { email: email, password: password };\r\n        axios.post(\"http://localhost:3000\"+\"/login/signup\",payload).then(response=>{\r\n            \r\n            if (response.status===201){\r\n                setmsg();\r\n                props.history.push(\"/login\");\r\n\r\n            }\r\n        }).catch((error)=>{\r\n            setmsg(error.response.data.msg);\r\n        ;});  \r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <div\r\n        style={{ height: \"100vh\", verticalAlign: \"middle\" }}\r\n        class=\"col text-center align-self-center\"\r\n      >\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <MDBCol className=\"row justify-content-center align-self-center\">\r\n          <MDBCard\r\n            color=\"stylish-color\"\r\n            style={{ width: \"31rem\", color: \"white\" }}\r\n            class=\"col-xs-1\"\r\n          >\r\n            <MDBCardBody>\r\n              <MDBCardTitle>\r\n                <MDBIcon icon=\"user-plus\" />\r\n                &nbsp; Sign Up\r\n              </MDBCardTitle>\r\n              <MDBCardText\r\n                style={{\r\n                  color: \"white\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                <div className=\"form-group\">\r\n                  <p style={{color:\"red\"}}>{invalidmsg}</p>\r\n                  <div\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      alignContent: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <label>\r\n                      <MDBIcon icon=\"user\" /> &nbsp; Email\r\n                    </label>\r\n                    <br />\r\n\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"Email\"\r\n                      className=\"form-control form-control-md\"\r\n                      email\r\n                      required\r\n                      style={{ width: \"450px\", textAlign: \"center\" }}\r\n                      onChange={emaillistener}\r\n                    />\r\n                  </div>\r\n                  <br />\r\n                  <label>\r\n                    <MDBIcon icon=\"key\" /> &nbsp; Password\r\n                  </label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"Password\"\r\n                    className=\"form-control form-control-md\"\r\n                    style={{ width: \"450px\", textAlign: \"center\" }}\r\n                    onChange={passwordlistener}\r\n                    required\r\n                  />\r\n                </div>\r\n              </MDBCardText>\r\n              <div class=\"row\">\r\n                <MDBBtn\r\n                  color=\"danger\"\r\n                  href=\"#\"\r\n                  style={{ width: \"220px\" }}\r\n                  href=\"/login\"\r\n                >\r\n                  Back\r\n                </MDBBtn>\r\n                &nbsp;\r\n                <MDBBtn\r\n                  color=\"success\"\r\n                  href=\"#\"\r\n                  style={{ width: \"220px\" }}\r\n                  onClick={submitlistener}\r\n                >\r\n                  + Create new Account\r\n                </MDBBtn>\r\n              </div>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Signup;","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\EditAccount.js",[],"C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\pagecomponent\\footer.js",[],"C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\pagecomponent\\nav.js",[],"C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\config.js",[],["84","85"],"C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\Homepagecomponents\\Maingraph.js",[],"C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\Homepagecomponents\\goalcard.js",[],"C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\Homepagecomponents\\Currenthealthcard.js",["86"],"import {\r\n  MDBCardBody,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBIcon,\r\n} from \"mdbreact\";\r\nimport PostHealthUdpates from '../HealthUpdates/posthealthupdates';\r\n\r\nfunction CurrentHealth(props){\r\n    return (\r\n      <div>\r\n        <MDBCardBody style={{ color: \"white\" }}>\r\n          <MDBCardTitle>\r\n            <MDBIcon icon=\"hand-holding-heart\" />\r\n            &nbsp;Current Health\r\n          </MDBCardTitle>\r\n          <MDBCardText style={{ color: \"white\" }}>\r\n            <br />\r\n            <div>\r\n              <h4>\r\n                <MDBIcon icon=\"balance-scale\" /> &nbsp; BMI :&nbsp; 20\r\n              </h4>\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <h4>\r\n                <MDBIcon icon=\"weight\" /> &nbsp; Weight :&nbsp; 80 kg\r\n              </h4>\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <h4>\r\n                <MDBIcon icon=\"ruler-vertical\" /> &nbsp; Height :&nbsp; 170 cm\r\n              </h4>\r\n            </div>\r\n            <br />\r\n\r\n            <div>\r\n              <h4>\r\n                <MDBIcon icon=\"percentage\" /> &nbsp; BodyFat :&nbsp;17 %\r\n              </h4>\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <h4>\r\n                <MDBIcon far icon=\"calendar-alt\" />\r\n                &nbsp; Age :&nbsp; 20\r\n              </h4>\r\n            </div>\r\n            <br />\r\n            <PostHealthUdpates curremail={props.curremail}></PostHealthUdpates>\r\n          </MDBCardText>\r\n        </MDBCardBody>\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default CurrentHealth;","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\HealthUpdates\\posthealthupdates.js",["87"],"import { useEffect, useState } from 'react'\r\nimport{MDBBtn,MDBContainer,MDBModal,MDBModalBody,MDBModalFooter,MDBModalHeader} from 'mdbreact'\r\nimport axios from 'axios';\r\n\r\nfunction PostHealthUdpates(props){\r\n\r\n    const[modal,setModal]= useState(false);\r\n    const[weight,setWeight]=useState();\r\n    const [height, setheight] = useState();\r\n    const [age, setage] = useState();\r\n    const [ bodyfat,setbodyfat]= useState();\r\n\r\n    useEffect(()=>{\r\n        window.addEventListener(\"toggle\",toggle);\r\n        window.addEventListener(\"submit\",submit);\r\n        window.addEventListener(\"weight\",handleweight);\r\n        window.addEventListener(\"height\",handleheight);\r\n        window.addEventListener(\"setage\",handleage);\r\n        window.addEventListener(\"bodyfat\",handlebodyfat);\r\n    })\r\n\r\n    function toggle(){\r\n        setModal(!modal);\r\n    }\r\n\r\n    function handleweight(event){\r\n        setWeight(event.target.value);\r\n    }\r\n\r\n    function handleheight(event){\r\n        setheight(event.target.value);\r\n    }\r\n\r\n    function handleage(event){\r\n        setage(event.target.value);\r\n    }\r\n\r\n    function handlebodyfat(event){\r\n        setbodyfat(event.target.value);\r\n    }\r\n    async function submit(){\r\n        toggle();\r\n\r\n        if(props.setisLoading!=null){\r\n        props.setisLoading(true);\r\n        }\r\n        const payload = {\r\n          email: props.curremail,\r\n          weight: weight,\r\n          height: height,\r\n          age: age,\r\n        };\r\n        await axios\r\n          .post(\"http://localhost:3000/updates/healthdetailupdate\", payload)\r\n          .then((response) => {\r\n            console.log(response)\r\n            if (props.setisLoading != null & props.setisLoading != null) {\r\n              props.getdata();\r\n              props.setisLoading(false);\r\n            }\r\n          });\r\n\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <MDBContainer>\r\n          <MDBBtn onClick={toggle} style={{ width: \"300px\" }}>\r\n            Health Updates +\r\n          </MDBBtn>\r\n          <MDBModal isOpen={modal} toggle={toggle}>\r\n            <MDBModalHeader toggle={toggle} style={{ color: \"black\" }}>\r\n              Health Update\r\n            </MDBModalHeader>\r\n            <MDBModalBody>\r\n              <form style={{ color: \"black\" }}>\r\n                <label>Weight(kg):</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  onChange={handleweight}\r\n                ></input>\r\n                <br />\r\n                <br />\r\n                <label>height(cm):</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  onChange={handleheight}\r\n                ></input>\r\n                <br />\r\n                <br />\r\n                <label>bodyfat:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  onChange={handlebodyfat}\r\n                ></input>\r\n                <br />\r\n                <br />\r\n                <label>Age: </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  onChange={handleage}\r\n                ></input>\r\n                <br />\r\n              </form>\r\n            </MDBModalBody>\r\n            <MDBModalFooter>\r\n              <MDBBtn color=\"danger\" onClick={toggle}>\r\n                Close\r\n              </MDBBtn>\r\n              <MDBBtn color=\"success\" onClick={submit}>\r\n                Save changes\r\n              </MDBBtn>\r\n            </MDBModalFooter>\r\n          </MDBModal>\r\n        </MDBContainer>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default PostHealthUdpates;","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\Updates.js",["88","89"],"import react, { useEffect, useState } from 'react'\r\nimport {MDBCard,MDBDataTable} from 'mdbreact'\r\nimport PostHealthUdpates from './HealthUpdates/posthealthupdates';\r\nimport axios from 'axios';\r\n\r\nfunction Updates(props){\r\n  const [isLoading, setisLoading] = useState(true);\r\n  const [updatedata, setupdatedata] = useState([]);\r\n  \r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"Id\",\r\n        field: \"number\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Height\",\r\n        field: \"height\",\r\n        sort: \"asc\",\r\n        width: 270,\r\n      },\r\n      {\r\n        label: \"Weight\",\r\n        field: \"weight\",\r\n        sort: \"asc\",\r\n        width: 270,\r\n      },\r\n      {\r\n        label: \"BMI\",\r\n        field: \"BMI\",\r\n        sort: \"asc\",\r\n        width: 270,\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n        sort: \"asc\",\r\n        width: 270,\r\n      },\r\n    ],\r\n    rows: updatedata,\r\n  };\r\n\r\n  function getdata(){\r\n    axios\r\n      .get(\r\n        \"http://localhost:3000/updates/getcurrenthealthstatus/\" +\r\n          props.curremail\r\n      )\r\n      .then((data) => {\r\n        var i = 1;\r\n        for (var x of data.data) {\r\n          x[\"number\"] = i;\r\n          i++;\r\n          x[\"BMI\"] = \"test\";\r\n          x[\"status\"] = \"test\";\r\n        }\r\n        setupdatedata(data.data);\r\n        data.rows = updatedata;\r\n        setisLoading(false);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getdata()\r\n  },[]);\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <MDBCard\r\n        style={{\r\n          paddingTop: \"40px\",\r\n          AlignItems: \"center\",\r\n          backgroundColor: \"#4B515D\",\r\n          color: \"white\",\r\n        }}\r\n      >\r\n        <h2>HealthUpdates</h2>\r\n        <PostHealthUdpates\r\n          style={{ float: \"right\" }}\r\n          curremail={props.curremail}\r\n          setisLoading={setisLoading}\r\n          getdata={getdata}\r\n        ></PostHealthUdpates>\r\n      </MDBCard>\r\n      <MDBCard style={{ backgroundColor: \"#4B515D\" }}>\r\n        <MDBDataTable\r\n          dark\r\n          theadColor=\"darkgrey\"\r\n          theadTextWhite\r\n          striped\r\n          bordered\r\n          small\r\n          fixed\r\n          hover\r\n          tbodyTextWhite\r\n          entries={8}\r\n          entriesOptions={[1, 5, 8]}\r\n          data={data}\r\n        />\r\n      </MDBCard>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Updates;","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\Goals.js",["90","91"],"import react,{useState,useEffect} from 'react'\r\nimport {MDBCard,MDBDataTable} from 'mdbreact';\r\nimport SetGoal from './Goals/Setgoal';\r\nimport axios from 'axios';\r\n\r\nfunction Goals(props){\r\n     const [isLoading, setisLoading] = useState(true);\r\n     const [updatedata, setupdatedata] = useState([]);\r\n\r\n     const data = {\r\n       columns: [\r\n         {\r\n           label: \"Id\",\r\n           field: \"number\",\r\n           sort: \"asc\",\r\n           width: 150,\r\n         },\r\n         {\r\n           label: \"Weight (kg)\",\r\n           field: \"weight\",\r\n           sort: \"asc\",\r\n           width: 270,\r\n         },\r\n        {\r\n           label: \"BodyFat (%)\",\r\n           field: \"bodyfat\",\r\n           sort: \"asc\",\r\n           width: 270,\r\n         },\r\n         {\r\n           label: \"BMI\",\r\n           field: \"BMI\",\r\n           sort: \"asc\",\r\n           width: 270,\r\n         },\r\n       ],\r\n       rows: updatedata,\r\n     };\r\n\r\n     function getdata() {\r\n       axios\r\n         .get(\r\n           \"http://localhost:3000/goal/getgoals/\" +\r\n             props.curremail\r\n         )\r\n         .then((data) => {\r\n           console.log(\"test123\")\r\n           var i = 1;\r\n           for (var x of data.data) {\r\n             x[\"number\"] = i;\r\n             i++;\r\n           }\r\n           setupdatedata(data.data);\r\n           data.rows = updatedata;\r\n           setisLoading(false);\r\n         });\r\n     }\r\n\r\n     useEffect(() => {\r\n       getdata();\r\n     }, []);\r\n\r\n     if (isLoading) {\r\n       return <div>Loading...</div>;\r\n     }\r\n\r\n     return (\r\n       <div>\r\n         <MDBCard\r\n           style={{\r\n             paddingTop: \"40px\",\r\n             AlignItems: \"center\",\r\n             backgroundColor: \"#4B515D\",\r\n             color: \"white\",\r\n           }}\r\n         >\r\n           <h2>Goals</h2>\r\n           <SetGoal\r\n             style={{ float: \"right\" }}\r\n             curremail={props.curremail}\r\n             setisLoading={setisLoading}\r\n             getdata={getdata}\r\n           ></SetGoal>\r\n         </MDBCard>\r\n         <MDBCard style={{ backgroundColor: \"#4B515D\" }}>\r\n           <MDBDataTable\r\n             dark\r\n             theadColor=\"darkgrey\"\r\n             theadTextWhite\r\n             striped\r\n             bordered\r\n             small\r\n             fixed\r\n             hover\r\n             tbodyTextWhite\r\n             entries={8}\r\n             entriesOptions={[1, 5, 8]}\r\n             data={data}\r\n           />\r\n         </MDBCard>\r\n       </div>\r\n     );\r\n}\r\n\r\nexport default Goals;","C:\\Users\\User\\Documents\\UNVERSITY SUBJECTS\\POST GRAD\\SYSTEM ANALYSIS\\HealthApplication\\healthapp\\src\\components\\Goals\\Setgoal.js",["92"],"import react, { useEffect, useState } from \"react\";\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalFooter,\r\n  MDBModalHeader,\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\n\r\nfunction SetGoal(props){\r\n    \r\n    const [modal, setModal] = useState(false);\r\n    const [weight, setWeight] = useState();\r\n    const [bodyfat, setbodyfat] = useState();\r\n\r\n    useEffect(() => {\r\n      window.addEventListener(\"toggle\", toggle);\r\n      window.addEventListener(\"submit\", submit);\r\n      window.addEventListener(\"weight\", handleweight);\r\n      window.addEventListener(\"bodyfat\", handlebodyfat);\r\n    });\r\n\r\n    function toggle() {\r\n      setModal(!modal);\r\n    }\r\n\r\n    function handleweight(event) {\r\n      setWeight(event.target.value);\r\n    }\r\n\r\n    function handlebodyfat(event) {\r\n      setbodyfat(event.target.value);\r\n    }\r\n    async function submit() {\r\n      toggle();\r\n      const payload={weight:weight,bodyfat:bodyfat,email:props.curremail}\r\n      await axios.post(\"http://localhost:3000/goal/newgoal\",payload).then((response)=>{\r\n        console.log(response);\r\n        if (props.setisLoading != null & props.setisLoading != null) {\r\n              props.getdata();\r\n              props.setisLoading(false);\r\n            }\r\n        })\r\n    }\r\n    return (\r\n      <div>\r\n        <MDBContainer>\r\n          <MDBBtn onClick={toggle} style={{ width: \"300px\" }}>\r\n            Set Goal >\r\n          </MDBBtn>\r\n          <MDBModal isOpen={modal} toggle={toggle}>\r\n            <MDBModalHeader toggle={toggle} style={{ color: \"black\" }}>\r\n              Set Goal\r\n            </MDBModalHeader>\r\n            <MDBModalBody>\r\n              <form style={{ color: \"black\" }}>\r\n                <label>Weight(kg):</label>\r\n                <input type=\"text\" className=\"form-control\" onChange={handleweight}></input>\r\n                <br />\r\n                <br />\r\n                <label>bodyfat:</label>\r\n                <input type=\"text\" className=\"form-control\" onChange={handlebodyfat}></input>\r\n                <br />\r\n                <br />\r\n              </form>\r\n            </MDBModalBody>\r\n            <MDBModalFooter>\r\n              <MDBBtn color=\"danger\" onClick={toggle}>\r\n                Close\r\n              </MDBBtn>\r\n              <MDBBtn color=\"success\" onClick={submit}>\r\n                Save changes\r\n              </MDBBtn>\r\n            </MDBModalFooter>\r\n          </MDBModal>\r\n        </MDBContainer>\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default SetGoal;",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":32,"column":43,"nodeType":"99","messageId":"100","endLine":32,"endColumn":44},{"ruleId":"97","severity":1,"message":"98","line":36,"column":43,"nodeType":"99","messageId":"100","endLine":36,"endColumn":44},{"ruleId":"101","severity":1,"message":"102","line":123,"column":19,"nodeType":"103","endLine":123,"endColumn":32},{"ruleId":"93","replacedBy":"104"},{"ruleId":"95","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},{"ruleId":"106","severity":1,"message":"110","line":11,"column":13,"nodeType":"108","messageId":"109","endLine":11,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},{"ruleId":"111","severity":1,"message":"112","line":68,"column":5,"nodeType":"113","endLine":68,"endColumn":7,"suggestions":"114"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},{"ruleId":"111","severity":1,"message":"112","line":61,"column":9,"nodeType":"113","endLine":61,"endColumn":11,"suggestions":"115"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["116"],["117"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'bodyfat' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getdata'. Either include it or remove the dependency array.","ArrayExpression",["118"],["119"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"120","fix":"122"},"Update the dependencies array to be: [getdata]",{"range":"123","text":"124"},{"range":"125","text":"124"},[1471,1473],"[getdata]",[1443,1445]]